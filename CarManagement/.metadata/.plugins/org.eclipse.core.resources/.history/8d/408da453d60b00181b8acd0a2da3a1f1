package com.bailian.car.controller.system;

import java.io.IOException;
import java.util.List;
import java.util.Set;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Description;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.bailian.car.common.aop.SystemLog;
import com.bailian.car.common.exception.CustomException;
import com.bailian.car.common.pojo.JsonData;
import com.bailian.car.common.utils.VerifyCodeUtils;
import com.bailian.car.domain.system.Role;
import com.bailian.car.domain.system.User;
import com.bailian.car.domain.vo.EditUserVo;
import com.bailian.car.service.system.*;;

@Controller
@Scope("prototype")
@RequestMapping("/user")
public class UserController {

	@Autowired
	private UserService userService;

	/**
	 * 
	 * @Title: genarateCode
	 * @Description: 验证码
	 * @param @param
	 *            request
	 * @param @param
	 *            response
	 * @param @throws
	 *            IOException 参数
	 * @return void 返回类型 @throws
	 */
	@RequestMapping(value = "/code.action")

	public void genarateCode(HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setHeader("Access-Control-Allow-Origin", "*");
		// 响应头信息
		response.setHeader("Pragma", "No-Cache");
		response.setHeader("Cache-Control", "no-cache");
		response.setDateHeader("Expries", 0);

		VerifyCodeUtils.outPutImagCode(request, response);

	}

	@RequestMapping(value = "/login.action", method = RequestMethod.POST)
	@ResponseBody
	// jsondata
	public JsonData login(String username, String password, String verifyCode, HttpServletRequest request,
			HttpServletResponse response) {

		String autologin = request.getParameter("autologin");

		JsonData login = userService.login(username, password, verifyCode, request, autologin);

		return login;
	}

	@RequestMapping(value = "/loginOut.action")
	public String loginOut() {
		// 基于Shiro的退出
		Subject subject = SecurityUtils.getSubject();
		subject.logout();
		return "login.html";

	}

	@RequestMapping(value = "/changeUserPassWord.action", method = RequestMethod.POST)
	@ResponseBody
	public String changeUserPassWord(HttpServletRequest request, HttpServletResponse response) {
		String usrname = request.getParameter("usrname");
		String oldpassword = request.getParameter("oldpassword");
		String newpassword = request.getParameter("newpassword");
		userService.changeUserPassWord(usrname, oldpassword, newpassword);
		return newpassword;

	}

	/**
	 * 
	* @Title: userInfo
	* @Description: 用户信息展示
	* @param @return    参数
	* @return String    返回类型
	* @throws
	 */
	@RequestMapping(value = "/UserInfo.action", method = RequestMethod.GET)
	@ResponseBody
	public String userInfo() {
		Subject subject = SecurityUtils.getSubject();
		User user = (User) subject.getPrincipal();
		Set<Role> roles = user.getRoles();
		return null;

	}

	@RequestMapping(value = "/userList.action", method = RequestMethod.POST)
	@ResponseBody
	// List<User>
	@SystemLog(medoule = "用户管理", methods = "查询用户")
	public List<User> userList(HttpServletRequest request) {

		List<User> users = userService.findALL();

		if (users == null) {
			throw new CustomException("用户列表为空");

		}
		// 跨域
		return users;

	}

	@RequestMapping(value = "/addUser.action", method = RequestMethod.POST)
	@ResponseBody
	public JsonData addUser(User user, @RequestParam(value = "rids[]", required = false) String[] roleIds) {
		return userService.save(user, roleIds);

	}

	@RequestMapping(value = "/check/{param}/{type}", method = RequestMethod.POST)
	@ResponseBody
	public JsonData checkData(@PathVariable String param, @PathVariable Integer type) {
		return userService.checkData(param, type);
	}

	@RequestMapping(value = "/delete.action", method = RequestMethod.POST)
	public String deleteUser(@RequestParam(value = "ids[]") String[] userIds, HttpServletRequest request,
			HttpServletResponse response) {

		userService.deleteUserByID(userIds);

		return "userList.html";

	}

	@RequestMapping(value = "/editUser.action", method = RequestMethod.POST)

	public String editUser(Model model, HttpServletRequest request, @RequestParam(value = "id") Integer userId) {

		User user = userService.findUserById(userId);

		if (user == null) {
			throw new CustomException("查无此用户，请联系管理员");
		}
		model.addAttribute("user", user);

		return "editUser";
	}

	@RequestMapping("/updateUser1")
	public String updateUser(User user) {
		userService.updateUser(user);

		return "userList";
	}

	@RequestMapping("/updateUser.action")
	public String updateUser(EditUserVo user, Integer id) {
		userService.updateUser(user, id);
		return "userList";
	}
}
