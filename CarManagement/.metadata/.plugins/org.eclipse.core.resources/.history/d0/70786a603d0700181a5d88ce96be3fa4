package com.bailian.car.common.log;

import java.lang.reflect.Method;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.aspectj.lang.ProceedingJoinPoint;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import com.bailian.car.service.SystemLogService;

public class LogAspect {
	@Autowired
	private SystemLogService systemLogService;

	private Log logger = LogFactory.getLog(LogAspect.class);

	public Object doSystemLog(ProceedingJoinPoint point) throws Throwable, SecurityException {
		String methodName = point.getSignature().getName();

		// 目标方法不为空
		if (StringUtils.isNotEmpty(methodName)) {
			// get 与 set 方法除外
			if (!(methodName.startsWith("set") || methodName.startsWith("get"))) {

				Class targetClass = point.getTarget().getClass();
				Method method = targetClass.getMethod(methodName);

				if (method != null) {
					boolean hasAnnotation = method.isAnnotationPresent(Controller.class);
					
					if (hasAnnotation) {
						method.getAnnotation()
					}
					
				}

			}

		}
		return methodName;
	}
}
