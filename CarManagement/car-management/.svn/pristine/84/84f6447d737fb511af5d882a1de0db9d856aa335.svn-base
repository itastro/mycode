package com.bailian.car.aop;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.bailian.car.common.LedResult;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Aspect
public class InOutAspect  extends HttpServlet{
	 private final static Logger LOGGER = LoggerFactory.getLogger(InOutAspect.class);
	String code1="";
	String code2="";
	
    LedResult ledResult=null;
	
	  /**
	    * @Fields field:field:{todo}(用一句话描述这个变量表示什么)
	    */
	    
	private static final long serialVersionUID = 1L;
	    
	    @Pointcut(("execution(* com.bailian.car.controller.iccard.IccardController.searchAuth())"))
		private void inOut() {

		}
	    
	    @Before("inOut()")
	    public void doBefor(JoinPoint joinPoint) {

	        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
	        HttpServletRequest request = attributes.getRequest();
	        //url
	        LOGGER.info("url={}", request.getRequestURL());
	        //methods
	        LOGGER.info("method={}", request.getMethod());
	        //ip
	        LOGGER.info("ip={}", request.getRemoteAddr());
	        //类方法
	        LOGGER.info("class_method={}", joinPoint.getSignature().getDeclaringTypeName() + "." + joinPoint.getSignature().getName());
	        //参数
	        LOGGER.info("args={}", joinPoint.getArgs());
	        
	        request.getParameter("codeOne");
	       
	    }
	    @Around("inOut()")
		public Object around(ProceedingJoinPoint pjp) throws Throwable {
	       ledResult = new LedResult();
	    	
			Object obj = null;
			ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
	        HttpServletRequest request = attributes.getRequest();
	        String url = request.getRequestURI().toString();
	        String codeOne = request.getParameter("codeOne");
	        String codeTwo = request.getParameter("codeTwo");
	        
	        if (url.equals("/car-management/iccard/searchAuth.action")) {
	        	
	      	  if (code1.equals(codeOne)) {
	      		  if (code2.equals(codeTwo)) {
	      			ledResult.setCarAuth(1); 
	      			ledResult.setCardType(1);
	      			ledResult.setReason("重复刷到卡");
	      			ledResult.setDriverAuth(1);
	      			return ledResult;   
	  			}  
	  		  }else {
	  			obj = pjp.proceed();
	  		  }
	         }
	        code1=codeOne;
	        code2=codeTwo;
			return obj;
			
		}
}
