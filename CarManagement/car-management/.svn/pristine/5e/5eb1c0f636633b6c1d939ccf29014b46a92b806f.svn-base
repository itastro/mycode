package com.bailian.car.controller.cars.project;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import com.bailian.car.annotation.SystemLog;
import com.bailian.car.beans.PageBean;
import com.bailian.car.beans.PageQuery;
import com.bailian.car.common.JsonData;
import com.bailian.car.domain.cars.car.Project;
import com.bailian.car.emnu.OperationType;
import com.bailian.car.exception.ParamException;
import com.bailian.car.service.project.ProjectService;
import com.bailian.car.utils.BeanValidator;
import com.bailian.car.utils.JsonMapper;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;

@Slf4j

@Api(description = "项目")
@Controller
@RequestMapping("/project")
public class ProjectController {

	@Autowired
	private ProjectService projectService;

	@RequestMapping("/project_bacthImport.action")
	@ResponseBody

	public JsonData batchImport(MultipartFile file) {
		return projectService.batchImport(file);
	}

	// 改变项目状态
	@RequestMapping("/updateStatus.action")
	@ResponseBody
	@SystemLog(type = OperationType.UPDATE, medoule = "车辆管理", methods = "更新项目状态")
	@ApiOperation(value = "更新项目状态")
	public JsonData updateStatus(String[] projectSn, String status) {

		if (projectSn.length <= 0) {
			throw new ParamException("项目号不能为空");
		}
		CheckParam(status);
		return projectService.update(projectSn, status);
	}

	// 加载所有的项目编号名称
	@RequestMapping("/loadprojectName.action")
	@ResponseBody
	@ApiOperation(value = "加载所有的项目名称")
	public List<String> loadprojectSn() {
		return projectService.loadprojectSn();
	}

	// 通过项目编号查询项目名称
	@RequestMapping("/loadNameBySn.action")
	@ResponseBody
	@ApiOperation(value = "通过项目号查询项目名称")
	public String loadNameBySn(String sn) {

		CheckParam(sn);
		return projectService.loadNameBySn(sn);
	}

	private void CheckParam(String sn) {
		if (StringUtils.isBlank(sn)) {
			throw new ParamException("参数不能为空");
		}
	}

	// 通过项目号查看项目状态
	@RequestMapping("/loadStatusBySn.action")
	@ResponseBody
	@ApiOperation(value = "通过项目号查询项目状态")
	public String loadStatusBySn(String sn) {
		CheckParam(sn);
		return projectService.loadStatusBySn(sn);
	}

	// 添加项目
	@RequestMapping("/addProject.action")
	@ResponseBody
	@ApiOperation(value = "添加项目")
	@SystemLog(type = OperationType.ADD, medoule = "系统管理", methods = "添加项目")
	public JsonData addProject(@RequestBody Project project) {
		BeanValidator.check(project);
		log.info("project:{}", JsonMapper.obj2String(project));
		return projectService.save(project);
	}

	// 修改项目
	@RequestMapping("/updateProject.action")
	@ResponseBody
	@ApiOperation(value = "修改项目")
	@SystemLog(type = OperationType.UPDATE, medoule = "系统管理", methods = "修改项目")
	public JsonData updateProject(@RequestBody Project project) {
		BeanValidator.check(project);
		log.info("project:{}", JsonMapper.obj2String(project));
		return projectService.update(project);
	}

	// 查询所有的项目
	@RequestMapping("/pageQuery.action")
	@ResponseBody
	@ApiOperation(value = "查询所有的项目")
	public PageBean<Project> query(PageQuery query) {
		return projectService.query(query);
	}

	// 项目的删除
	@RequestMapping("/delete.action")
	@ResponseBody
	@ApiOperation(value = "删除项目")
	public JsonData delProject(String[] ids) {
		return projectService.delProject(ids);
	}

	// 项目编号模糊查询
	@RequestMapping("/likeProjectSn.action")
	@ResponseBody
	@ApiOperation(value = "删除项目")
	public List<String> likeProjectSn(String projectsn) {
		return projectService.likeProjectSn(projectsn);
	}

}
