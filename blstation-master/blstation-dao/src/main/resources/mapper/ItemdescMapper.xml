<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bl.station.mapper.ItemdescMapper" >
  <resultMap id="BaseResultMap" type="com.bl.station.entity.Itemdesc" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bl.station.entity.ItemdescWithBLOBs" extends="BaseResultMap" >
    <result column="descn" property="descn" jdbcType="LONGVARCHAR" />
    <result column="function" property="function" jdbcType="LONGVARCHAR" />
    <result column="application" property="application" jdbcType="LONGVARCHAR" />
    <result column="param" property="param" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createtime, item_id
  </sql>
  <sql id="Blob_Column_List" >
    descn, function, application, param
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.bl.station.entity.ItemdescExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from itemdesc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bl.station.entity.ItemdescExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from itemdesc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from itemdesc
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from itemdesc
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bl.station.entity.ItemdescExample" >
    delete from itemdesc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bl.station.entity.ItemdescWithBLOBs" >
    insert into itemdesc (id, createtime, item_id, 
      descn, function, application, 
      param)
    values (#{id,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{itemId,jdbcType=INTEGER}, 
      #{descn,jdbcType=LONGVARCHAR}, #{function,jdbcType=LONGVARCHAR}, #{application,jdbcType=LONGVARCHAR}, 
      #{param,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bl.station.entity.ItemdescWithBLOBs" >
    insert into itemdesc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="descn != null" >
        descn,
      </if>
      <if test="function != null" >
        function,
      </if>
      <if test="application != null" >
        application,
      </if>
      <if test="param != null" >
        param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="descn != null" >
        #{descn,jdbcType=LONGVARCHAR},
      </if>
      <if test="function != null" >
        #{function,jdbcType=LONGVARCHAR},
      </if>
      <if test="application != null" >
        #{application,jdbcType=LONGVARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bl.station.entity.ItemdescExample" resultType="java.lang.Integer" >
    select count(*) from itemdesc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update itemdesc
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.descn != null" >
        descn = #{record.descn,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.function != null" >
        function = #{record.function,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.application != null" >
        application = #{record.application,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.param != null" >
        param = #{record.param,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update itemdesc
    set id = #{record.id,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      item_id = #{record.itemId,jdbcType=INTEGER},
      descn = #{record.descn,jdbcType=LONGVARCHAR},
      function = #{record.function,jdbcType=LONGVARCHAR},
      application = #{record.application,jdbcType=LONGVARCHAR},
      param = #{record.param,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update itemdesc
    set id = #{record.id,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      item_id = #{record.itemId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bl.station.entity.ItemdescWithBLOBs" >
    update itemdesc
    <set >
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="descn != null" >
        descn = #{descn,jdbcType=LONGVARCHAR},
      </if>
      <if test="function != null" >
        function = #{function,jdbcType=LONGVARCHAR},
      </if>
      <if test="application != null" >
        application = #{application,jdbcType=LONGVARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bl.station.entity.ItemdescWithBLOBs" >
    update itemdesc
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      item_id = #{itemId,jdbcType=INTEGER},
      descn = #{descn,jdbcType=LONGVARCHAR},
      function = #{function,jdbcType=LONGVARCHAR},
      application = #{application,jdbcType=LONGVARCHAR},
      param = #{param,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bl.station.entity.Itemdesc" >
    update itemdesc
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      item_id = #{itemId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByItemId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">

    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from itemdesc
    where item_id = #{id,jdbcType=INTEGER}

  </select>

</mapper>