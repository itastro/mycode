<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bl.station.mapper.ItemMapper">
    <resultMap id="BaseResultMap" type="com.bl.station.entity.Item">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="itemcat_id" property="itemcatId" jdbcType="INTEGER"/>
        <result column="picurl" property="picurl" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
    </resultMap>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, createtime, itemcat_id, picurl, status
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bl.station.entity.ItemExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from item
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bl.station.entity.ItemExample">
        delete from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.bl.station.entity.Item">
    insert into item (id, name, createtime, 
      itemcat_id, picurl, status
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{itemcatId,jdbcType=INTEGER}, #{picurl,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bl.station.entity.Item">
        insert into item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="itemcatId != null">
                itemcat_id,
            </if>
            <if test="picurl != null">
                picurl,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="itemcatId != null">
                #{itemcatId,jdbcType=INTEGER},
            </if>
            <if test="picurl != null">
                #{picurl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bl.station.entity.ItemExample" resultType="java.lang.Integer">
        select count(*) from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update item
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null">
                createtime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.itemcatId != null">
                itemcat_id = #{record.itemcatId,jdbcType=INTEGER},
            </if>
            <if test="record.picurl != null">
                picurl = #{record.picurl,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update item
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
        itemcat_id = #{record.itemcatId,jdbcType=INTEGER},
        picurl = #{record.picurl,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bl.station.entity.Item">
        update item
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="itemcatId != null">
                itemcat_id = #{itemcatId,jdbcType=INTEGER},
            </if>
            <if test="picurl != null">
                picurl = #{picurl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bl.station.entity.Item">
    update item
    set name = #{name,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      itemcat_id = #{itemcatId,jdbcType=INTEGER},
      picurl = #{picurl,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <!--<select id="pageQuery" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
        </include>
        from item  ORDER  BY createtime DESC
    </select>-->

   <!-- <select id="pageQuery" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
        </include>
        from item  ORDER  BY createtime DESC
    </select>-->


    <select id="pageQuery" resultType="map">
      SELECT
	*
FROM
	(
		SELECT
			item.id,
			item.`name`,
			item.createtime,
			itemcat_id AS itemcatId,
			picurl,
			`status`,
			itemcat.`name` AS itemcatname
		FROM
			item,
			itemcat
		WHERE
			item.itemcat_id = itemcat.id
	) AS i
ORDER BY
	i.createtime DESC
    </select>


    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
        </include>
        from item  ORDER  BY createtime DESC
    </select>
    
    <select id="findByItemCatId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT

        <include refid="Base_Column_List">
        </include>
        from item where itemcat_id = #{id,jdbcType=INTEGER} ORDER  BY createtime DESC
    </select>

    <select id="likeName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from item
        WHERE item.name like '%${name}%'
    </select>

</mapper>